
Progarmming Language used -Python
(Used pip 19.2.3 from c:\python\lib\site-packages\pip (python 3.8))
Install Python (enable Path variables - Scripts folder!)
Eclipse -install pydev plugin via market place
Configure Eclipse : install RED plugin
Configure Eclipse : Configure RED to make use of the installed robotframework
Install ChromeDriver(or other to enable testing in other browsers)
pip install robotframework


Type of framework - Keyword driven framework (Robot Framework)

Different packages 
Used -Browser library for ui test automation 


builtIn library/standar libraries
Collections
Dialogs
Operating System
Process
Screenshot -Taking screenshot
String
Telnet
XML  -reporting

Referenced libraries
Browser

Libraries used (installed using pip install library name)

Pip list
robotframework                  3.2.2
robotframework-browser          4.5.2
robotframework-pythonlibcore    2.2.1
robotframework-screencaplibrary 1.5.2.dev1

Folder structure
ChartGeneration\ChartGenerationUI\PageObjects  ->which contains a resource file with specific keyword definitions and also a common reource collector ChartGenerationResourceCollector.resource which clubs all these resource files
ChartGeneration\ChartGenerationUI\Tests-(contains both the test cases)
ChartGeneration\ChartGenerationUI\Locators.py (common locator file)
(ChartGeneration\ChartGenerationUI)__init__.robot

Reporting
Robot Framework generates two HTML files that are log and report files. These are complementary to each other 
Apart from these files, an XML is generated by default that contains the metadata of all the output of the test results.
(Using built in XML and screenshot)

ScreenRecording - Used ScreenCapLibrary


CI/CD - Will integrate git with jenkins
Test Execution Status   ->Email
                        -> Screenshot

Git will be used for version controlling						
			